# SwiftLint Configuration File
# Place this file in your project root directory

# MARK: - File Inclusion/Exclusion
included:
  - Sources
  - Tests
  - App
  - Package.swift

excluded:
  - Pods
  - Carthage
  - .build
  - DerivedData
  - vendor
  - "**/*Generated*"
  - "**/*.generated.swift"
  - "**/*.pb.swift"
  - "**/*.pbobjc.*"

# MARK: - Analyzer Rules
analyzer_rules:
  - unused_declaration
  - unused_import

# MARK: - Enabled Rules
opt_in_rules:
  - array_init
  - attributes
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - colon
  - comma
  - comment_spacing
  - compiler_protocol_init
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discouraged_object_literal
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - empty_collection_literal
  - empty_count
  - empty_string
  - enum_case_associated_values_count
  - explicit_init
  - extension_access_modifier
  - fallthrough
  - fatal_error_message
  - file_header
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - function_default_parameter_at_end
  - identical_operands
  - implicit_return
  - joined_default_parameter
  - last_where
  - legacy_random
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - nimble_operator
  - nslocalizedstring_key
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - prohibited_super_call
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - reduce_into
  - redundant_nil_coalescing
  - redundant_type_annotation
  - return_arrow_whitespace
  - shorthand_operator
  - single_test_class
  - sorted_first_last
  - sorted_imports
  - static_operator
  - strong_iboutlet
  - switch_case_alignment
  - toggle_bool
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - untyped_error_in_catch
  - unused_closure_parameter
  - unused_control_flow_label
  - unused_enumerated
  - unused_optional_binding
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - xct_specific_matcher
  - yoda_condition

# MARK: - Disabled Rules
disabled_rules:
  - todo
  - function_body_length
  - cyclomatic_complexity
  - nesting

# MARK: - Rule Configurations

# Line Length
line_length:
  warning: 120
  error: 150
  ignores_function_declarations: true
  ignores_comments: true
  ignores_urls: true

# File Length
file_length:
  warning: 500
  error: 1200

# Function Body Length
function_body_length:
  warning: 50
  error: 100

# Function Parameter Count
function_parameter_count:
  warning: 5
  error: 8

# Type Body Length
type_body_length:
  warning: 200
  error: 400

# Type Name
type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 40
    error: 50
  excluded:
    - iPhone
    - URL
    - UUID
    - API
    - HTTP
    - XML
    - JSON
    - UI
    - ID

# Identifier Name
identifier_name:
  min_length:
    warning: 1
    error: 1
  max_length:
    warning: 40
    error: 60
  excluded:
    - id
    - URL
    - GlobalAPIKey
    - x
    - y
    - z
    - i
    - j
    - k

# Large Tuple
large_tuple:
  warning: 2
  error: 3

# Nesting
nesting:
  type_level:
    warning: 1
  function_level:
    warning: 5

# Cyclomatic Complexity
cyclomatic_complexity:
  warning: 10
  error: 20

# Reporter
reporter: "xcode"

# MARK: - Custom Rules
custom_rules:
  # Discourage force unwrapping in production code
  no_force_unwrapping_in_production:
    name: "Force Unwrapping"
    regex: '\!\s*(?!\/\/)'
    match_kinds:
      - identifier
    message: "Avoid force unwrapping in production code"
    severity: warning
    
  # Require MARK comments for extensions
  extension_mark:
    name: "Extension MARK"
    regex: 'extension\s+\w+(?:\s*:\s*\w+(?:\s*,\s*\w+)*)?\s*\{\s*(?!\/\/\s*MARK:)'
    message: "Extensions should be marked with // MARK: - ExtensionName"
    severity: warning

# MARK: - SwiftLint Version
swiftlint_version: 0.50.0

# MARK: - Build Tool Plugin (if using SPM)
# Uncomment if you're using Swift Package Manager
# build_tool_plugin:
#   - SwiftLintPlugin